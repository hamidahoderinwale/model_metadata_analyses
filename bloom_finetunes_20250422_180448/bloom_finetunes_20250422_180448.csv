model_id,card,metadata,depth,children,children_count,adapters,adapters_count,quantized,quantized_count,merges,merges_count,spaces,spaces_count
bigscience/bloom,"---
license: bigscience-bloom-rail-1.0
language:
- ak
- ar
- as
- bm
- bn
- ca
- code
- en
- es
- eu
- fon
- fr
- gu
- hi
- id
- ig
- ki
- kn
- lg
- ln
- ml
- mr
- ne
- nso
- ny
- or
- pa
- pt
- rn
- rw
- sn
- st
- sw
- ta
- te
- tn
- ts
- tum
- tw
- ur
- vi
- wo
- xh
- yo
- zh
- zu
programming_language: 
- C
- C++
- C#
- Go
- Java
- JavaScript
- Lua
- PHP
- Python
- Ruby
- Rust
- Scala
- TypeScript
pipeline_tag: text-generation
widget:
- text: 'A ""whatpu"" is a small, furry animal native to Tanzania. An example of a sentence that uses the word whatpu is: We were traveling in Africa and we saw these very cute whatpus. | To do a ""farduddle"" means to jump up and down really fast. An example of a sentence that uses the word farduddle is:'
  example_title: Imaginary word
  group: English
- text: 'Un ""whatpu"" est un petit animal à fourrure originaire de Tanzanie. Un exemple de phrase qui utilise le mot whatpu est: Nous étions en Afrique et nous avons vu des whatpus trop mignons. Faire un ""farduddle"" veut dire sauter sur place vraiment vite. Un exemple de phrase qui utilise le mot farduddle est:'
  example_title: Imaginary word
  group: French
- text: 'Un ""whatpu"" es un pequeño animal peludo nativo de Tanzania. Un ejemplo de una oración que usa la palabra whatpu es: Estábamos viajando por África y vimos estos whatpus muy bonitos. Hacer un ""farduddle"" significa saltar arriba y abajo muy rápido. Un ejemplo de una oración que usa la palabra farduddle es:'
  example_title: Imaginary word
  group: Spanish
- text: ' ال""واتبو"" هو حيوان صغير مكسو بالفراء يعيش في تنزانيا. مثال على جملة تستخدم كلمة واتبو هي: كنا نسافر في افريقيا و رأينا هؤلاء الواتبو اللطفاء. للقيام ب""فاردادل"" يعني ان تقفز للأعلى و الأسفل بسرعة كبيرة. مثال على جملة تستخدم كلمة فاردادل هي:'
  example_title: Imaginary word
  group: Arabic
- text: 'Um ""whatpu"" é um pequeno animal peludo nativo da Tanzânia. Um exemplo de uma frase que usa a palavra whatpu é: Estávamos a viajar por África e vimos uns whatpus muito queridos. Fazer um ""farduddle"" significa saltar para cima e para baixo muito rápido. Um exemplo de uma frase que usa a palavra farduddle é:'
  example : Imaginary word
  group: Portuguese
- text: Pour déguster un ortolan, il faut tout d'abord
  example_title: Recipe
  group: French
- text: |-
    34+10=44 
    54+20=
  example_title: Addition
  group: Math
- text: |-
    This tool converts irregular verbs to past tense.
    Arise - Arose
    Become - Became
    Forget - Forgot
    Freeze -
  example_title: Irregular verbs
  group: English
- text: |-
    Please unscramble the letters into a word, and write that word:
    r e!c.i p r o.c a/l = reciprocal
    d.o m i!n a n.t =
  example_title: Word unscrambling
  group: English
- text: |-
    Estos ejemplos quitan vocales de las palabras
    Ejemplos:
    hola - hl
    manzana - mnzn
    papas - pps
    alacran - lcrn
    papa -
  example_title: Vowel removal
  group: Spanish
- text: |-
    Traduce español de España a español de Argentina
    El coche es rojo - el auto es rojo
    El ordenador es nuevo - la computadora es nueva
    el boligrafo es negro - lapicera es negra
    la nevera
  example_title: Spanish to Argentinian Spanish
  group: Spanish
- text: To say ""I love you"" in Hindi, you would say
  example_title: Translation to Hindi
  group: English
- text: To say ""I love you"" in Hindi, you would say
  example_title: Translation from English
  group: Hindi
- text: 'Poor English: She no went to the market. Corrected English:'
  example_title: Grammar exercise 1 
  group: English
- text: 'استخراج العدد العاملي في لغة بايثون:'
  example_title: Code generation
  group: Arabic
- text: 'Regexp. Here is a regular expression to match a word starting with a number and then having only vowels:'
  example_title: Regular expressions
  group: English
- text: |-
    Do a hello world in different languages:
    Python: print(""hello world"")
    R:
  example_title: Code generation
  group: English
- text: |-
    Which is the correct preposition? I'm born X July. X is the preposition in
    He sat X a chair. X is the preposition on
    She drove X the bridge. X is the preposition
  example_title: Grammar exercise 2
  group: English
- text: |-
    Traduction en français: Dans cet essai je vais m'interroger sur la conscience des modèles d'intelligence artificielle récents comme les modèles de langue. Pour commencer, je m'intéresserai à la notion de conscience et à ce qui la caractérise. Ensuite, j'aborderai la question de l'intelligence et de son lien avec le langage. Enfin, dans une dernière partie je me pencherai sur le cas de l'IA et sur sa conscience.
    Traduction en espagnol:
  example_title: Translation to Spanish
  group: French
- text: |-
    Traducción al francés: Dans cet essai je vais m'interroger sur la conscience des modèles d'intelligence artificielle récents comme les modèles de langue. Pour commencer, je m'intéresserai à la notion de conscience et à ce qui la caractérise. Ensuite, j'aborderai la question de l'intelligence et de son lien avec le langage. Enfin, dans une dernière partie je me pencherai sur le cas de l'IA et sur sa conscience.
    Traducción al español:
  example_title: Translation from French
  group: Spanish
- text: ذات مرة ، عاش شبل الدب في الغابة
  example_title: Fairy tale
  group: Arabic
- text: एक बार की बात है, जंगल में एक भालू का शावक रहता था
  example_title: Fairy tale
  group: Hindi
- text: Il était une fois une licorne qui vivait
  example_title: Fairy tale
  group: French
- text: |-
    Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half of the golf balls are blue. How many blue golf balls are there?
    A: Let's think step by step.
  example_title: Mathematical reasoning
  group: English

co2_eq_emissions:
  emissions: 24_700_000
  source: ""Estimating the Carbon Footprint of BLOOM, a 176B Parameter Language Model. https://arxiv.org/abs/2211.02001""
  training_type: ""pre-training""
  geographical_location: ""Orsay, France""
  hardware_used: ""384 A100 80GB GPUs""

model-index:
- name: bloom
  results:
  - task:
      type: text-generation
    dataset:
      type: openai_humaneval
      name: humaneval
    metrics:
    - name: pass@1
      type: pass@1
      value: 0.15542682926829265
      verified: false
    - name: pass@10
      type: pass@10
      value: 0.3278356276947017
      verified: false
    - name: pass@100
      type: pass@100
      value: 0.5719815685597749
      verified: false
---

<img src=""https://cdn-uploads.huggingface.co/production/uploads/1657124309515-5f17f0a0925b9863e28ad517.png"" alt=""BigScience Logo"" width=""800"" style=""margin-left:'auto' margin-right:'auto' display:'block'""/>

BigScience Large Open-science Open-access Multilingual Language Model  
Version 1.3 / 6 July 2022

Current Checkpoint: **Training Iteration  95000**

Link to paper: [here](https://arxiv.org/abs/2211.05100)

Total seen tokens: **366B**

---

# Model Details  

BLOOM is an autoregressive Large Language Model (LLM), trained to continue text from a prompt on vast amounts of text data using industrial-scale computational resources. As such, it is able to output coherent text in 46 languages and 13 programming languages that is hardly distinguishable from text written by humans. BLOOM can also be instructed to perform text tasks it hasn't been explicitly trained for, by casting them as text generation tasks.

## Basics
*This section provides information about the model type, version, license, funders, release date, developers, and contact information.*
*It is useful for anyone who wants to reference the model.*

<details>
<summary>Click to expand</summary>
  
**Developed by:** BigScience ([website](https://bigscience.huggingface.co))

*All collaborators are either volunteers or have an agreement with their employer. (Further breakdown of participants forthcoming.)*
    
**Model Type:** Transformer-based Language Model

**Checkpoints format:** `transformers` (Megatron-DeepSpeed format available [here](https://huggingface.co/bigscience/bloom-optimizer-states))

**Version:** 1.0.0

**Languages:** Multiple; see [training data](#training-data)

**License:** RAIL License v1.0 ([link](https://huggingface.co/spaces/bigscience/license) / [article and FAQ](https://bigscience.huggingface.co/blog/the-bigscience-rail-license))

**Release Date Estimate:** Monday, 11.July.2022

**Send Questions to:** bigscience-contact@googlegroups.com

**Cite as:** BigScience, _BigScience Language Open-science Open-access Multilingual (BLOOM) Language Model_. International, May 2021-May 2022

**Funded by:** 
    
* The French government.

* Hugging Face ([website](https://huggingface.co)).

* Organizations of contributors.  *(Further breakdown of organizations forthcoming.)*

</details>


## Technical Specifications
*This section includes details about the model objective and architecture, and the compute infrastructure.*
*It is useful for people interested in model development.*

<details>
<summary>Click to expand</summary>

Please see [the BLOOM training README](https://github.com/bigscience-workshop/bigscience/tree/master/train/tr11-176B-ml#readme) for full details on replicating training.

### Model Architecture and Objective

* Modified from Megatron-LM GPT2 (see [paper](https://arxiv.org/abs/1909.08053), [BLOOM Megatron code](https://github.com/bigscience-workshop/Megatron-DeepSpeed)):

* Decoder-only architecture

* Layer normalization applied to word embeddings layer (`StableEmbedding`; see [code](https://github.com/facebookresearch/bitsandbytes), [paper](https://arxiv.org/pdf/2110.02861.pdf))

* ALiBI positional encodings (see [paper](https://arxiv.org/pdf/2108.12409.pdf)), with GeLU activation functions

* 176,247,271,424 parameters:

    * 3,596,615,680 embedding parameters

    * 70 layers, 112 attention heads

    * Hidden layers are 14336-dimensional

    * Sequence length of 2048 tokens used (see [BLOOM tokenizer](https://huggingface.co/bigscience/tokenizer), [tokenizer description](#tokenization))

**Objective Function:** Cross Entropy with mean reduction (see [API documentation](https://pytorch.org/docs/stable/generated/torch.nn.CrossEntropyLoss.html#torch.nn.CrossEntropyLoss)).
    
### Compute infrastructure
Jean Zay Public Supercomputer, provided by the French government (see [announcement](https://www.enseignementsup-recherche.gouv.fr/fr/signature-du-marche-d-acquisition-de-l-un-des-supercalculateurs-les-plus-puissants-d-europe-46733)).

#### Hardware

* 384 A100 80GB GPUs (48 nodes)
    
* Additional 32 A100 80GB GPUs (4 nodes) in reserve

* 8 GPUs per node Using NVLink 4 inter-gpu connects, 4 OmniPath links

* CPU: AMD

* CPU memory: 512GB per node

* GPU memory: 640GB per node

* Inter-node connect: Omni-Path Architecture (OPA)

* NCCL-communications network: a fully dedicated subnet

* Disc IO network: shared network with other types of nodes

#### Software

* Megatron-DeepSpeed ([Github link](https://github.com/bigscience-workshop/Megatron-DeepSpeed))

* DeepSpeed ([Github link](https://github.com/microsoft/DeepSpeed))

* PyTorch (pytorch-1.11 w/ CUDA-11.5; see [Github link](https://github.com/pytorch/pytorch))

* apex ([Github link](https://github.com/NVIDIA/apex))
    
</details>

---

# Training
*This section provides information about the training data, the speed and size of training elements, and the environmental impact of training.*
*It is useful for people who want to learn more about the model inputs and training footprint.*

<details>
<summary>Click to expand</summary>

## Training Data
*This section provides a high-level overview of the training data. It is relevant for anyone who wants to know the basics of what the model is learning.*

Details for each dataset are provided in individual [Data Cards](https://huggingface.co/spaces/bigscience/BigScienceCorpus), and the sizes of each of their contributions to the aggregated training data are presented in an [Interactive Corpus Map](https://huggingface.co/spaces/bigscience-catalogue-lm-data/corpus-map).

Training data includes:

-   46 natural languages
    
-   13 programming languages

-   In 1.6TB of pre-processed text, converted into 350B unique tokens (see [the tokenizer section](#tokenization) for more.)

### Languages
    
The pie chart shows the distribution of languages in training data.
   
![pie chart showing the distribution of languages in training data](https://github.com/bigscience-workshop/model_card/blob/main/assets/data/pie_v2.svg?raw=true)


The following tables shows the further distribution of Niger-Congo & Indic languages and programming languages in the training data.

Distribution of Niger Congo and Indic languages.
    
| Niger Congo    | Percentage |         | Indic     | Percentage |
|----------------|------------| ------  |-----------|------------|
| Chi Tumbuka    | 0.00002    |         | Assamese  | 0.01       |
| Kikuyu         | 0.00004    |         | Odia      | 0.04       |
| Bambara        | 0.00004    |         | Gujarati  | 0.04       |
| Akan           | 0.00007    |         | Marathi   | 0.05       |
| Xitsonga       | 0.00007    |         | Punjabi   | 0.05       |
| Sesotho        | 0.00007    |         | Kannada   | 0.06       |
| Chi Chewa      | 0.0001     |         | Nepali    | 0.07       |
| Setswana       | 0.0002     |         | Telugu    | 0.09       |
| Lingala        | 0.0002     |         | Malayalam | 0.10       |
| Northern Sotho | 0.0002     |         | Urdu      | 0.10       |
| Fon            | 0.0002     |         | Tamil     | 0.20       |
| Kirundi        | 0.0003     |         | Bengali   | 0.50       |
| Wolof          | 0.0004     |         | Hindi     | 0.70       |
| Luganda        | 0.0004     |
| Chi Shona      | 0.001      |
| Isi Zulu       | 0.001      |
| Igbo           | 0.001      |
| Xhosa          | 0.001      |
| Kinyarwanda    | 0.003      |
| Yoruba         | 0.006      |
| Swahili        | 0.02       |

Distribution of programming languages.
    
| Extension      | Language   | Number of files |
|----------------|------------|-----------------|
| java           | Java       | 5,407,724       |
| php            | PHP        | 4,942,186       |
| cpp            | C++        | 2,503,930       |
| py             | Python     | 2,435,072       |
| js             | JavaScript | 1,905,518       |
| cs             | C#         | 1,577,347       |
| rb             | Ruby       | 6,78,413        |
| cc             | C++        | 443,054         |
| hpp            | C++        | 391,048         |
| lua            | Lua        | 352,317         |
| go             | GO         | 227,763         |
| ts             | TypeScript | 195,254         |
| C              | C          | 134,537         |
| scala          | Scala      | 92,052          |
| hh             | C++        | 67,161          |
| H              | C++        | 55,899          |
| tsx            | TypeScript | 33,107          |
| rs             | Rust       | 29,693          |
| phpt           | PHP        | 9,702           |
| c++            | C++        | 1,342           |
| h++            | C++        | 791             |
| php3           | PHP        | 540             |
| phps           | PHP        | 270             |
| php5           | PHP        | 166             |
| php4           | PHP        | 29              |
    
### Preprocessing

**Tokenization:** The BLOOM tokenizer ([link](https://huggingface.co/bigscience/tokenizer)), a learned subword tokenizer trained using:
    
- A byte-level Byte Pair Encoding (BPE) algorithm 

- A simple pre-tokenization rule, no normalization

- A vocabulary size of 250,680

It was trained on a subset of a preliminary version of the corpus using alpha-weighting per language.  

## Speeds, Sizes, Times

Training logs: [Tensorboard link](https://huggingface.co/tensorboard/bigscience/tr11-176B-ml-logs/)

- Dates:
    
    - Started 11th March, 2022 11:42am PST

    - Estimated end: 5th July, 2022

- Checkpoint size:
    
    - Bf16 weights: 329GB
    
    - Full checkpoint with optimizer states: 2.3TB

- Training throughput: About 150 TFLOP per GPU per second

- Number of epochs: 1

- Estimated cost of training: Equivalent of $2-5M in cloud computing (including preliminary experiments)

- Server training location: Île-de-France, France


## Environmental Impact

The training supercomputer, Jean Zay ([website](http://www.idris.fr/eng/jean-zay/jean-zay-presentation-eng.html)), uses mostly nuclear energy. The heat generated by it is reused for heating campus housing.
    
**Estimated carbon emissions:**  *(Forthcoming.)*
    
**Estimated electricity usage:** *(Forthcoming.)*

</details>

---

# Uses

*This section addresses questions around how the model is intended to be used, discusses the foreseeable users of the model (including those affected by the model), and describes uses that are considered out of scope or misuse of the model.*
*It is useful for anyone considering using the model or who is affected by the model.*

<details>
<summary>Click to expand</summary>
    
## How to use

This model can be easily used and deployed using HuggingFace's ecosystem. This needs `transformers` and `accelerate` installed. The model can be downloaded as follows:

 <img src=""https://s3.amazonaws.com/moonup/production/uploads/1657271608456-62441d1d9fdefb55a0b7d12c.png"" width=""800"" style=""margin-left:'auto' margin-right:'auto' display:'block'""/>

## Intended Use

This model is being created in order to enable public research on large language models (LLMs). LLMs are intended to be used for language generation or as a pretrained base model that can be further fine-tuned for specific tasks. Use cases below are not exhaustive.

### Direct Use

-   Text generation

-   Exploring characteristics of language generated by a language model

    -   Examples: Cloze tests, counterfactuals, generations with reframings

### Downstream Use

-   Tasks that leverage language models include: Information Extraction, Question Answering, Summarization

### Misuse and Out-of-scope Use
*This section addresses what users ought not do with the model.*

See the [BLOOM License](https://huggingface.co/spaces/bigscience/license), Attachment A, for detailed usage restrictions. The below list is non-exhaustive, but lists some easily foreseeable problematic use cases.

#### Out-of-scope Uses

Using the model in [high-stakes](#high-stakes) settings is out of scope for this model.  The model is not designed for [critical decisions](#critical-decisions) nor uses with any material consequences on an individual's livelihood or wellbeing. The model outputs content that appears factual but may not be correct.  

Out-of-scope Uses Include:

-   Usage in biomedical domains, political and legal domains, or finance domains

-   Usage for evaluating or scoring individuals, such as for employment, education, or credit

-   Applying the model for critical automatic decisions, generating factual content, creating reliable summaries, or generating predictions that must be correct

#### Misuse

Intentionally using the model for harm, violating [human rights](#human-rights), or other kinds of malicious activities, is a misuse of this model. This includes:

-   Spam generation

-   Disinformation and influence operations

-   Disparagement and defamation

-   Harassment and abuse
  
-   [Deception](#deception)

-   Unconsented impersonation and imitation

-   Unconsented surveillance 

-   Generating content without attribution to the model, as specified in the [RAIL License, Use Restrictions](https://huggingface.co/spaces/bigscience/license)

## Intended Users

### Direct Users

-   General Public

-   Researchers

-   Students

-   Educators

-   Engineers/developers

-   Non-commercial entities

-   Community advocates, including human and civil rights groups

### Indirect Users

-   Users of derivatives created by Direct Users, such as those using software with an [intended use](#intended-use)

-   Users of [Derivatives of the Model, as described in the License](https://huggingface.co/spaces/bigscience/license)

### Others Affected (Parties Prenantes)

-   People and groups referred to by the LLM

-   People and groups exposed to outputs of, or decisions based on, the LLM

-   People and groups whose original work is included in the LLM

</details>

---

# Risks and Limitations
*This section identifies foreseeable harms and misunderstandings.*
    
<details>
<summary>Click to expand</summary>

Model may:

-   Overrepresent some viewpoints and underrepresent others

-   Contain stereotypes
  
-   Contain [personal information](#personal-data-and-information)

-   Generate:

    -   Hateful, abusive, or violent language

    -   Discriminatory or prejudicial language

    -   Content that may not be appropriate for all settings, including sexual content

-   Make errors, including producing incorrect information as if it were factual

-   Generate irrelevant or repetitive outputs

-   Induce users into attributing human traits to it, such as sentience or consciousness

</details>

---

# Evaluation
*This section describes the evaluation protocols and provides the results.*


<details>
<summary>Click to expand</summary>

## Metrics 
*This section describes the different ways performance is calculated and why.*

Includes:

| Metric             | Why chosen                                                         |
|--------------------|--------------------------------------------------------------------|
| [Perplexity](#perplexity)         | Standard metric for quantifying model improvements during training |
| Cross Entropy [Loss](#loss) | Standard objective for language models.                            |

And multiple different metrics for specific tasks. _(More evaluation metrics forthcoming upon completion of evaluation protocol.)_

## Factors 
*This section lists some different aspects of BLOOM models. Its focus is on aspects that are likely to give rise to high variance in model behavior.*

- Language, such as English or Yoruba

- Domain, such as newswire or stories

- Demographic characteristics, such as gender or nationality

##  Results
*Results are based on the [Factors](#factors) and [Metrics](#metrics).*

**Zero-shot evaluations:**

<span style=""color:red""><b>WARNING:</b> This section used to contain much more results, however they were not correct and we released without the approval of the evaluation working group. We are currently in the process of fixing the evaluations.</span>

See this repository for JSON files: https://github.com/bigscience-workshop/evaluation-results

| Task | Language | Metric | BLOOM-176B | OPT-175B* |
|:--------|:-----------------|:------------------------|-------------:|------------:|
| humaneval | python | pass@1 ↑ | 0.155 | 0.0 |
| humaneval | python | pass@10 ↑ | 0.328 | 0.0 |
| humaneval | python | pass@100 ↑ | 0.572 | 0.003 |


**Train-time Evaluation:**

Final checkpoint after 95K steps:

- Training Loss: 1.939

- Validation Loss: 2.061

- Perplexity: 7.045

For more see: https://huggingface.co/bigscience/tr11-176B-ml-logs

</details>

---

# Recommendations

*This section provides information on warnings and potential mitigations.*

<details>
<summary>Click to expand</summary>

-   Indirect users should be made aware when the content they're working with is created by the LLM.

-   Users should be aware of [Risks and Limitations](#risks-and-limitations), and include an appropriate age disclaimer or blocking interface as necessary.

-   Models trained or finetuned downstream of BLOOM LM should include an updated Model Card.

-   Users of the model should provide mechanisms for those affected to provide feedback, such as an email address for comments.

</details>

---

# Glossary and Calculations

*This section defines common terms and how metrics are calculated.*
<details>
<summary>Click to expand</summary>

-   <a name=""loss"">**Loss:**</a> A calculation of the difference between what the model has learned and what the data shows (""groundtruth""). The lower the loss, the better. The training process aims to minimize the loss. 

-   <a name=""perplexity"">**Perplexity:**</a> This is based on what the model estimates the probability of new data is. The lower the perplexity, the better.  If the model is 100% correct at predicting the next token it will see, then the perplexity is 1. Mathematically this is calculated using entropy. 

-   <a name=""high-stakes"">**High-stakes settings:**</a> Such as those identified as ""high-risk AI systems"" and ""unacceptable risk AI systems"" in the European Union's proposed [Artificial Intelligence (AI) Act](https://artificialintelligenceact.eu/annexes/).

-   <a name=""critical-decisions"">**Critical decisions:**</a> Such as those defined in [the United States' proposed Algorithmic Accountability Act](https://www.congress.gov/117/bills/s3572/BILLS-117s3572is.pdf).

-   <a name=""human-rights"">**Human rights:**</a> Includes those rights defined in the [Universal Declaration of Human Rights](https://www.un.org/sites/un2.un.org/files/2021/03/udhr.pdf).

-  <a name=""personal-data-and-information"">**Personal Data and Personal Information:**</a> Personal data and information is defined in multiple data protection regulations, such as ""[personal data](https://gdpr-info.eu/issues/personal-data/)"" in the [European Union's General Data Protection Regulation](https://gdpr-info.eu); and ""personal information"" in the Republic of South Africa's [Protection of Personal Information Act](https://www.gov.za/sites/default/files/gcis_document/201409/3706726-11act4of2013popi.pdf), The People's Republic of China's [Personal information protection law](http://en.npc.gov.cn.cdurl.cn/2021-12/29/c_694559.htm).
  
- <a name=""sensitive-characteristics"">**Sensitive characteristics:**</a> This includes specifically protected categories in human rights (see [UHDR, Article 2](https://www.un.org/sites/un2.un.org/files/2021/03/udhr.pdf)) and personal information regulation (see GDPR, [Article 9; Protection of Personal Information Act, Chapter 1](https://www.gov.za/sites/default/files/gcis_document/201409/3706726-11act4of2013popi.pdf))

- <a name=""deception"">**Deception:**</a> Doing something to intentionally mislead individuals to believe something that is false, such as by creating deadbots or chatbots on social media posing as real people, or generating text documents without making consumers aware that the text is machine generated.

</details>

---

# More Information
*This section provides links to writing on dataset creation, technical specifications, lessons learned, and initial results.*

<details>
<summary>Click to expand</summary>

## Intermediate checkpoints

For academic (or any) usage, we published the intermediate checkpoints, corresponding to the model state at each 5000 steps. Please follow [this link](https://huggingface.co/bigscience/bloom-176-intermediate) to get these checkpoints.

    
## Dataset Creation

Blog post detailing the design choices during the dataset creation: https://bigscience.huggingface.co/blog/building-a-tb-scale-multilingual-dataset-for-language-modeling

## Technical Specifications

Blog post summarizing how the architecture, size, shape, and pre-training duration where selected: https://bigscience.huggingface.co/blog/what-language-model-to-train-if-you-have-two-million-gpu-hours

More details on the architecture/optimizer: https://github.com/bigscience-workshop/bigscience/tree/master/train/tr11-176B-ml

Blog post on the hardware/engineering side: https://bigscience.huggingface.co/blog/which-hardware-to-train-a-176b-parameters-model

Details on the distributed setup used for the training: https://github.com/bigscience-workshop/bigscience/tree/master/train/tr11-176B-ml

Tensorboard updated during the training: https://huggingface.co/bigscience/tr11-176B-ml-logs/tensorboard#scalars&tagFilter=loss

## Lessons

Insights on how to approach training, negative results: https://github.com/bigscience-workshop/bigscience/blob/master/train/lessons-learned.md

Details on the obstacles overcome during the preparation on the engineering side (instabilities, optimization of training throughput, so many technical tricks and questions): https://github.com/bigscience-workshop/bigscience/blob/master/train/tr11-176B-ml/chronicles.md

## Initial Results

Initial prompting experiments using interim checkpoints: https://huggingface.co/spaces/bigscience/bloom-book

</details>


## Original checkpoints

The checkpoints in this repo correspond to the HuggingFace Transformers format. If you want to use our fork of [Megatron-DeepSpeed](https://github.com/bigscience-workshop/Megatron-DeepSpeed) that the model was trained with, you'd want to use [this repo instead](https://huggingface.co/bigscience/bloom-optimizer-states).

Many intermediate checkpoints are available at https://huggingface.co/bigscience/bloom-intermediate/

---
    
# Model Card Authors
*Ordered roughly chronologically and by amount of time spent on creating this model card.*

Margaret Mitchell, Giada Pistilli, Yacine Jernite, Ezinwanne Ozoani, Marissa Gerchick, Nazneen Rajani, Sasha Luccioni, Irene Solaiman, Maraim Masoud, Somaieh Nikpoor, Carlos Muñoz Ferrandis, Stas Bekman, Christopher Akiki, Danish Contractor, David Lansky, Angelina McMillan-Major, Tristan Thrush, Suzana Ilić, Gérard Dupont, Shayne Longpre, Manan Dey, Stella Biderman, Douwe Kiela, Emi Baylor, Teven Le Scao, Aaron Gokaslan, Julien Launay, Niklas Muennighoff","{""id"": ""bigscience/bloom"", ""author"": ""bigscience"", ""sha"": ""053d9cd9fbe814e091294f67fcfedb3397b954bb"", ""last_modified"": ""2023-07-28 17:50:20+00:00"", ""created_at"": ""2022-05-19 11:53:33+00:00"", ""private"": false, ""gated"": false, ""disabled"": false, ""downloads"": 3932, ""downloads_all_time"": null, ""likes"": 4887, ""library_name"": ""transformers"", ""gguf"": null, ""inference"": null, ""tags"": [""transformers"", ""pytorch"", ""tensorboard"", ""safetensors"", ""bloom"", ""text-generation"", ""ak"", ""ar"", ""as"", ""bm"", ""bn"", ""ca"", ""code"", ""en"", ""es"", ""eu"", ""fon"", ""fr"", ""gu"", ""hi"", ""id"", ""ig"", ""ki"", ""kn"", ""lg"", ""ln"", ""ml"", ""mr"", ""ne"", ""nso"", ""ny"", ""or"", ""pa"", ""pt"", ""rn"", ""rw"", ""sn"", ""st"", ""sw"", ""ta"", ""te"", ""tn"", ""ts"", ""tum"", ""tw"", ""ur"", ""vi"", ""wo"", ""xh"", ""yo"", ""zh"", ""zu"", ""arxiv:2211.05100"", ""arxiv:1909.08053"", ""arxiv:2110.02861"", ""arxiv:2108.12409"", ""doi:10.57967/hf/0003"", ""license:bigscience-bloom-rail-1.0"", ""model-index"", ""co2_eq_emissions"", ""autotrain_compatible"", ""text-generation-inference"", ""endpoints_compatible"", ""region:us""], ""pipeline_tag"": ""text-generation"", ""mask_token"": null, ""trending_score"": null, ""card_data"": ""language:\n- ak\n- ar\n- as\n- bm\n- bn\n- ca\n- code\n- en\n- es\n- eu\n- fon\n- fr\n- gu\n- hi\n- id\n- ig\n- ki\n- kn\n- lg\n- ln\n- ml\n- mr\n- ne\n- nso\n- ny\n- or\n- pa\n- pt\n- rn\n- rw\n- sn\n- st\n- sw\n- ta\n- te\n- tn\n- ts\n- tum\n- tw\n- ur\n- vi\n- wo\n- xh\n- yo\n- zh\n- zu\nlicense: bigscience-bloom-rail-1.0\npipeline_tag: text-generation\nprogramming_language:\n- C\n- C++\n- C#\n- Go\n- Java\n- JavaScript\n- Lua\n- PHP\n- Python\n- Ruby\n- Rust\n- Scala\n- TypeScript\nwidget:\n- text: 'A \""whatpu\"" is a small, furry animal native to Tanzania. An example of a sentence\n    that uses the word whatpu is: We were traveling in Africa and we saw these very\n    cute whatpus. | To do a \""farduddle\"" means to jump up and down really fast. An\n    example of a sentence that uses the word farduddle is:'\n  example_title: Imaginary word\n  group: English\n- text: 'Un \""whatpu\"" est un petit animal \u00e0 fourrure originaire de Tanzanie. Un exemple\n    de phrase qui utilise le mot whatpu est: Nous \u00e9tions en Afrique et nous avons\n    vu des whatpus trop mignons. Faire un \""farduddle\"" veut dire sauter sur place vraiment\n    vite. Un exemple de phrase qui utilise le mot farduddle est:'\n  example_title: Imaginary word\n  group: French\n- text: 'Un \""whatpu\"" es un peque\u00f1o animal peludo nativo de Tanzania. Un ejemplo de\n    una oraci\u00f3n que usa la palabra whatpu es: Est\u00e1bamos viajando por \u00c1frica y vimos\n    estos whatpus muy bonitos. Hacer un \""farduddle\"" significa saltar arriba y abajo\n    muy r\u00e1pido. Un ejemplo de una oraci\u00f3n que usa la palabra farduddle es:'\n  example_title: Imaginary word\n  group: Spanish\n- text: ' \u0627\u0644\""\u0648\u0627\u062a\u0628\u0648\"" \u0647\u0648 \u062d\u064a\u0648\u0627\u0646 \u0635\u063a\u064a\u0631 \u0645\u0643\u0633\u0648 \u0628\u0627\u0644\u0641\u0631\u0627\u0621 \u064a\u0639\u064a\u0634 \u0641\u064a \u062a\u0646\u0632\u0627\u0646\u064a\u0627. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645\n    \u0643\u0644\u0645\u0629 \u0648\u0627\u062a\u0628\u0648 \u0647\u064a: \u0643\u0646\u0627 \u0646\u0633\u0627\u0641\u0631 \u0641\u064a \u0627\u0641\u0631\u064a\u0642\u064a\u0627 \u0648 \u0631\u0623\u064a\u0646\u0627 \u0647\u0624\u0644\u0627\u0621 \u0627\u0644\u0648\u0627\u062a\u0628\u0648 \u0627\u0644\u0644\u0637\u0641\u0627\u0621. \u0644\u0644\u0642\u064a\u0627\u0645 \u0628\""\u0641\u0627\u0631\u062f\u0627\u062f\u0644\""\n    \u064a\u0639\u0646\u064a \u0627\u0646 \u062a\u0642\u0641\u0632 \u0644\u0644\u0623\u0639\u0644\u0649 \u0648 \u0627\u0644\u0623\u0633\u0641\u0644 \u0628\u0633\u0631\u0639\u0629 \u0643\u0628\u064a\u0631\u0629. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645 \u0643\u0644\u0645\u0629 \u0641\u0627\u0631\u062f\u0627\u062f\u0644 \u0647\u064a:'\n  example_title: Imaginary word\n  group: Arabic\n- text: 'Um \""whatpu\"" \u00e9 um pequeno animal peludo nativo da Tanz\u00e2nia. Um exemplo de\n    uma frase que usa a palavra whatpu \u00e9: Est\u00e1vamos a viajar por \u00c1frica e vimos uns\n    whatpus muito queridos. Fazer um \""farduddle\"" significa saltar para cima e para\n    baixo muito r\u00e1pido. Um exemplo de uma frase que usa a palavra farduddle \u00e9:'\n  example: Imaginary word\n  group: Portuguese\n- text: Pour d\u00e9guster un ortolan, il faut tout d'abord\n  example_title: Recipe\n  group: French\n- text: \""34+10=44 \\n54+20=\""\n  example_title: Addition\n  group: Math\n- text: 'This tool converts irregular verbs to past tense.\n\n    Arise - Arose\n\n    Become - Became\n\n    Forget - Forgot\n\n    Freeze -'\n  example_title: Irregular verbs\n  group: English\n- text: 'Please unscramble the letters into a word, and write that word:\n\n    r e!c.i p r o.c a/l = reciprocal\n\n    d.o m i!n a n.t ='\n  example_title: Word unscrambling\n  group: English\n- text: 'Estos ejemplos quitan vocales de las palabras\n\n    Ejemplos:\n\n    hola - hl\n\n    manzana - mnzn\n\n    papas - pps\n\n    alacran - lcrn\n\n    papa -'\n  example_title: Vowel removal\n  group: Spanish\n- text: 'Traduce espa\u00f1ol de Espa\u00f1a a espa\u00f1ol de Argentina\n\n    El coche es rojo - el auto es rojo\n\n    El ordenador es nuevo - la computadora es nueva\n\n    el boligrafo es negro - lapicera es negra\n\n    la nevera'\n  example_title: Spanish to Argentinian Spanish\n  group: Spanish\n- text: To say \""I love you\"" in Hindi, you would say\n  example_title: Translation to Hindi\n  group: English\n- text: To say \""I love you\"" in Hindi, you would say\n  example_title: Translation from English\n  group: Hindi\n- text: 'Poor English: She no went to the market. Corrected English:'\n  example_title: Grammar exercise 1\n  group: English\n- text: '\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0644\u0639\u062f\u062f \u0627\u0644\u0639\u0627\u0645\u0644\u064a \u0641\u064a \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646:'\n  example_title: Code generation\n  group: Arabic\n- text: 'Regexp. Here is a regular expression to match a word starting with a number\n    and then having only vowels:'\n  example_title: Regular expressions\n  group: English\n- text: 'Do a hello world in different languages:\n\n    Python: print(\""hello world\"")\n\n    R:'\n  example_title: Code generation\n  group: English\n- text: 'Which is the correct preposition? I''m born X July. X is the preposition\n    in\n\n    He sat X a chair. X is the preposition on\n\n    She drove X the bridge. X is the preposition'\n  example_title: Grammar exercise 2\n  group: English\n- text: 'Traduction en fran\u00e7ais: Dans cet essai je vais m''interroger sur la conscience\n    des mod\u00e8les d''intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue.\n    Pour commencer, je m''int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise.\n    Ensuite, j''aborderai la question de l''intelligence et de son lien avec le langage.\n    Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l''IA et sur sa\n    conscience.\n\n    Traduction en espagnol:'\n  example_title: Translation to Spanish\n  group: French\n- text: 'Traducci\u00f3n al franc\u00e9s: Dans cet essai je vais m''interroger sur la conscience\n    des mod\u00e8les d''intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue.\n    Pour commencer, je m''int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise.\n    Ensuite, j''aborderai la question de l''intelligence et de son lien avec le langage.\n    Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l''IA et sur sa\n    conscience.\n\n    Traducci\u00f3n al espa\u00f1ol:'\n  example_title: Translation from French\n  group: Spanish\n- text: \u0630\u0627\u062a \u0645\u0631\u0629 \u060c \u0639\u0627\u0634 \u0634\u0628\u0644 \u0627\u0644\u062f\u0628 \u0641\u064a \u0627\u0644\u063a\u0627\u0628\u0629\n  example_title: Fairy tale\n  group: Arabic\n- text: \u090f\u0915 \u092c\u093e\u0930 \u0915\u0940 \u092c\u093e\u0924 \u0939\u0948, \u091c\u0902\u0917\u0932 \u092e\u0947\u0902 \u090f\u0915 \u092d\u093e\u0932\u0942 \u0915\u093e \u0936\u093e\u0935\u0915 \u0930\u0939\u0924\u093e \u0925\u093e\n  example_title: Fairy tale\n  group: Hindi\n- text: Il \u00e9tait une fois une licorne qui vivait\n  example_title: Fairy tale\n  group: French\n- text: 'Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half\n    of the golf balls are blue. How many blue golf balls are there?\n\n    A: Let''s think step by step.'\n  example_title: Mathematical reasoning\n  group: English\nco2_eq_emissions:\n  emissions: 24700000\n  source: Estimating the Carbon Footprint of BLOOM, a 176B Parameter Language Model.\n    https://arxiv.org/abs/2211.02001\n  training_type: pre-training\n  geographical_location: Orsay, France\n  hardware_used: 384 A100 80GB GPUs\nmodel-index:\n- name: bloom\n  results:\n  - task:\n      type: text-generation\n    dataset:\n      name: humaneval\n      type: openai_humaneval\n    metrics:\n    - type: pass@1\n      value: 0.15542682926829265\n      name: pass@1\n      verified: false\n    - type: pass@10\n      value: 0.3278356276947017\n      name: pass@10\n      verified: false\n    - type: pass@100\n      value: 0.5719815685597749\n      name: pass@100\n      verified: false"", ""widget_data"": [{""text"": ""A \""whatpu\"" is a small, furry animal native to Tanzania. An example of a sentence that uses the word whatpu is: We were traveling in Africa and we saw these very cute whatpus. | To do a \""farduddle\"" means to jump up and down really fast. An example of a sentence that uses the word farduddle is:"", ""example_title"": ""Imaginary word"", ""group"": ""English""}, {""text"": ""Un \""whatpu\"" est un petit animal \u00e0 fourrure originaire de Tanzanie. Un exemple de phrase qui utilise le mot whatpu est: Nous \u00e9tions en Afrique et nous avons vu des whatpus trop mignons. Faire un \""farduddle\"" veut dire sauter sur place vraiment vite. Un exemple de phrase qui utilise le mot farduddle est:"", ""example_title"": ""Imaginary word"", ""group"": ""French""}, {""text"": ""Un \""whatpu\"" es un peque\u00f1o animal peludo nativo de Tanzania. Un ejemplo de una oraci\u00f3n que usa la palabra whatpu es: Est\u00e1bamos viajando por \u00c1frica y vimos estos whatpus muy bonitos. Hacer un \""farduddle\"" significa saltar arriba y abajo muy r\u00e1pido. Un ejemplo de una oraci\u00f3n que usa la palabra farduddle es:"", ""example_title"": ""Imaginary word"", ""group"": ""Spanish""}, {""text"": "" \u0627\u0644\""\u0648\u0627\u062a\u0628\u0648\"" \u0647\u0648 \u062d\u064a\u0648\u0627\u0646 \u0635\u063a\u064a\u0631 \u0645\u0643\u0633\u0648 \u0628\u0627\u0644\u0641\u0631\u0627\u0621 \u064a\u0639\u064a\u0634 \u0641\u064a \u062a\u0646\u0632\u0627\u0646\u064a\u0627. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645 \u0643\u0644\u0645\u0629 \u0648\u0627\u062a\u0628\u0648 \u0647\u064a: \u0643\u0646\u0627 \u0646\u0633\u0627\u0641\u0631 \u0641\u064a \u0627\u0641\u0631\u064a\u0642\u064a\u0627 \u0648 \u0631\u0623\u064a\u0646\u0627 \u0647\u0624\u0644\u0627\u0621 \u0627\u0644\u0648\u0627\u062a\u0628\u0648 \u0627\u0644\u0644\u0637\u0641\u0627\u0621. \u0644\u0644\u0642\u064a\u0627\u0645 \u0628\""\u0641\u0627\u0631\u062f\u0627\u062f\u0644\"" \u064a\u0639\u0646\u064a \u0627\u0646 \u062a\u0642\u0641\u0632 \u0644\u0644\u0623\u0639\u0644\u0649 \u0648 \u0627\u0644\u0623\u0633\u0641\u0644 \u0628\u0633\u0631\u0639\u0629 \u0643\u0628\u064a\u0631\u0629. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645 \u0643\u0644\u0645\u0629 \u0641\u0627\u0631\u062f\u0627\u062f\u0644 \u0647\u064a:"", ""example_title"": ""Imaginary word"", ""group"": ""Arabic""}, {""text"": ""Um \""whatpu\"" \u00e9 um pequeno animal peludo nativo da Tanz\u00e2nia. Um exemplo de uma frase que usa a palavra whatpu \u00e9: Est\u00e1vamos a viajar por \u00c1frica e vimos uns whatpus muito queridos. Fazer um \""farduddle\"" significa saltar para cima e para baixo muito r\u00e1pido. Um exemplo de uma frase que usa a palavra farduddle \u00e9:"", ""example"": ""Imaginary word"", ""group"": ""Portuguese""}, {""text"": ""Pour d\u00e9guster un ortolan, il faut tout d'abord"", ""example_title"": ""Recipe"", ""group"": ""French""}, {""text"": ""34+10=44 \n54+20="", ""example_title"": ""Addition"", ""group"": ""Math""}, {""text"": ""This tool converts irregular verbs to past tense.\nArise - Arose\nBecome - Became\nForget - Forgot\nFreeze -"", ""example_title"": ""Irregular verbs"", ""group"": ""English""}, {""text"": ""Please unscramble the letters into a word, and write that word:\nr e!c.i p r o.c a/l = reciprocal\nd.o m i!n a n.t ="", ""example_title"": ""Word unscrambling"", ""group"": ""English""}, {""text"": ""Estos ejemplos quitan vocales de las palabras\nEjemplos:\nhola - hl\nmanzana - mnzn\npapas - pps\nalacran - lcrn\npapa -"", ""example_title"": ""Vowel removal"", ""group"": ""Spanish""}, {""text"": ""Traduce espa\u00f1ol de Espa\u00f1a a espa\u00f1ol de Argentina\nEl coche es rojo - el auto es rojo\nEl ordenador es nuevo - la computadora es nueva\nel boligrafo es negro - lapicera es negra\nla nevera"", ""example_title"": ""Spanish to Argentinian Spanish"", ""group"": ""Spanish""}, {""text"": ""To say \""I love you\"" in Hindi, you would say"", ""example_title"": ""Translation to Hindi"", ""group"": ""English""}, {""text"": ""To say \""I love you\"" in Hindi, you would say"", ""example_title"": ""Translation from English"", ""group"": ""Hindi""}, {""text"": ""Poor English: She no went to the market. Corrected English:"", ""example_title"": ""Grammar exercise 1"", ""group"": ""English""}, {""text"": ""\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0644\u0639\u062f\u062f \u0627\u0644\u0639\u0627\u0645\u0644\u064a \u0641\u064a \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646:"", ""example_title"": ""Code generation"", ""group"": ""Arabic""}, {""text"": ""Regexp. Here is a regular expression to match a word starting with a number and then having only vowels:"", ""example_title"": ""Regular expressions"", ""group"": ""English""}, {""text"": ""Do a hello world in different languages:\nPython: print(\""hello world\"")\nR:"", ""example_title"": ""Code generation"", ""group"": ""English""}, {""text"": ""Which is the correct preposition? I'm born X July. X is the preposition in\nHe sat X a chair. X is the preposition on\nShe drove X the bridge. X is the preposition"", ""example_title"": ""Grammar exercise 2"", ""group"": ""English""}, {""text"": ""Traduction en fran\u00e7ais: Dans cet essai je vais m'interroger sur la conscience des mod\u00e8les d'intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue. Pour commencer, je m'int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise. Ensuite, j'aborderai la question de l'intelligence et de son lien avec le langage. Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l'IA et sur sa conscience.\nTraduction en espagnol:"", ""example_title"": ""Translation to Spanish"", ""group"": ""French""}, {""text"": ""Traducci\u00f3n al franc\u00e9s: Dans cet essai je vais m'interroger sur la conscience des mod\u00e8les d'intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue. Pour commencer, je m'int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise. Ensuite, j'aborderai la question de l'intelligence et de son lien avec le langage. Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l'IA et sur sa conscience.\nTraducci\u00f3n al espa\u00f1ol:"", ""example_title"": ""Translation from French"", ""group"": ""Spanish""}, {""text"": ""\u0630\u0627\u062a \u0645\u0631\u0629 \u060c \u0639\u0627\u0634 \u0634\u0628\u0644 \u0627\u0644\u062f\u0628 \u0641\u064a \u0627\u0644\u063a\u0627\u0628\u0629"", ""example_title"": ""Fairy tale"", ""group"": ""Arabic""}, {""text"": ""\u090f\u0915 \u092c\u093e\u0930 \u0915\u0940 \u092c\u093e\u0924 \u0939\u0948, \u091c\u0902\u0917\u0932 \u092e\u0947\u0902 \u090f\u0915 \u092d\u093e\u0932\u0942 \u0915\u093e \u0936\u093e\u0935\u0915 \u0930\u0939\u0924\u093e \u0925\u093e"", ""example_title"": ""Fairy tale"", ""group"": ""Hindi""}, {""text"": ""Il \u00e9tait une fois une licorne qui vivait"", ""example_title"": ""Fairy tale"", ""group"": ""French""}, {""text"": ""Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half of the golf balls are blue. How many blue golf balls are there?\nA: Let's think step by step."", ""example_title"": ""Mathematical reasoning"", ""group"": ""English""}], ""model_index"": [{""name"": ""bloom"", ""results"": [{""task"": {""type"": ""text-generation""}, ""dataset"": {""type"": ""openai_humaneval"", ""name"": ""humaneval""}, ""metrics"": [{""name"": ""pass@1"", ""type"": ""pass@1"", ""value"": 0.15542682926829265, ""verified"": false}, {""name"": ""pass@10"", ""type"": ""pass@10"", ""value"": 0.3278356276947017, ""verified"": false}, {""name"": ""pass@100"", ""type"": ""pass@100"", ""value"": 0.5719815685597749, ""verified"": false}]}]}], ""config"": {""architectures"": [""BloomForCausalLM""], ""model_type"": ""bloom"", ""tokenizer_config"": {""unk_token"": ""<unk>"", ""eos_token"": ""</s>"", ""bos_token"": ""<s>"", ""pad_token"": ""<pad>""}}, ""transformers_info"": {""auto_model"": ""AutoModelForCausalLM"", ""custom_class"": null, ""pipeline_tag"": ""text-generation"", ""processor"": ""AutoTokenizer""}, ""siblings"": [""RepoSibling(rfilename='.gitattributes', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='README.md', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='config.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model.safetensors.index.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00001-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00002-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00003-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00004-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00005-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00006-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00007-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00008-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00009-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00010-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00011-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00012-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00013-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00014-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00015-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00016-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00017-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00018-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00019-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00020-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00021-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00022-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00023-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00024-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00025-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00026-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00027-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00028-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00029-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00030-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00031-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00032-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00033-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00034-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00035-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00036-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00037-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00038-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00039-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00040-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00041-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00042-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00043-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00044-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00045-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00046-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00047-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00048-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00049-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00050-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00051-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00052-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00053-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00054-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00055-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00056-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00057-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00058-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00059-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00060-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00061-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00062-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00063-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00064-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00065-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00066-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00067-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00068-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00069-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00070-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00071-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='model_00072-of-00072.safetensors', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model.bin.index.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00001-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00002-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00003-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00004-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00005-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00006-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00007-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00008-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00009-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00010-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00011-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00012-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00013-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00014-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00015-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00016-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00017-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00018-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00019-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00020-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00021-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00022-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00023-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00024-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00025-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00026-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00027-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00028-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00029-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00030-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00031-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00032-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00033-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00034-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00035-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00036-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00037-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00038-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00039-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00040-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00041-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00042-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00043-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00044-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00045-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00046-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00047-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00048-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00049-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00050-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00051-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00052-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00053-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00054-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00055-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00056-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00057-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00058-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00059-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00060-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00061-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00062-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00063-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00064-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00065-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00066-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00067-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00068-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00069-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00070-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00071-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model_00072-of-00072.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='special_tokens_map.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647027747.jean-zay-iam49.1142471.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647059982.jean-zay-iam49.1169365.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647072350.jean-zay-iam49.1178242.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647099575.jean-zay-iam49.1196405.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647274395.jean-zay-iam48.1017795.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647470222.jean-zay-iam48.1134760.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647564839.jean-zay-iam48.1193559.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647866650.jean-zay-iam52.1073897.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647958109.jean-zay-iam52.20528.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1647973163.jean-zay-iam52.31645.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648168815.jean-zay-iam52.148568.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648169171.jean-zay-iam52.150996.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648169531.jean-zay-iam52.153340.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648202973.jean-zay-iam52.175972.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648458933.jean-zay-iam52.324428.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648518091.jean-zay-iam52.360536.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648518697.jean-zay-iam52.363054.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648521383.jean-zay-iam52.367143.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648522539.jean-zay-iam52.369998.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648571149.jean-zay-iam52.402138.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648571925.jean-zay-iam52.404789.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648572713.jean-zay-iam52.407397.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648573558.jean-zay-iam52.410490.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648655509.jean-zay-iam49.463624.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1648742074.jean-zay-iam52.508789.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649101577.jean-zay-iam52.716175.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649113385.jean-zay-iam52.725092.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649179466.jean-zay-iam52.17691.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649239782.jean-zay-iam52.28788.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649265967.jean-zay-iam52.46699.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649266447.jean-zay-iam52.49137.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649310804.jean-zay-iam52.76541.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649390816.jean-zay-iam52.124903.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649441015.jean-zay-iam50.156467.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1649800529.jean-zay-iam52.354602.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1650160096.jean-zay-iam52.564967.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1650348336.jean-zay-iam52.673744.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1650368004.jean-zay-iam52.54578.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1650596241.jean-zay-iam51.188174.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1650812626.jean-zay-iam52.114170.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651172225.jean-zay-iam52.320528.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651177990.jean-zay-iam52.327266.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651178531.jean-zay-iam52.329706.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651179186.jean-zay-iam52.332193.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651219570.jean-zay-iam52.357383.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651255249.jean-zay-iam52.380451.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651255845.jean-zay-iam52.382952.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651256396.jean-zay-iam52.385418.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651256937.jean-zay-iam49.586981.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651380782.jean-zay-iam52.455542.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651415769.jean-zay-iam51.675000.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651416302.jean-zay-iam50.679380.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651423670.jean-zay-iam50.685711.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651426823.jean-zay-iam49.705432.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651427339.jean-zay-iam49.707861.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651563673.jean-zay-iam51.769163.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651683144.jean-zay-iam52.624684.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1651696090.jean-zay-iam52.634091.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652055756.jean-zay-iam48.306219.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652075059.jean-zay-iam48.319244.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652076312.jean-zay-iam48.322094.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652076789.jean-zay-iam52.852249.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652082469.jean-zay-iam48.330316.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652104823.jean-zay-iam52.870264.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652108930.jean-zay-iam48.349384.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652109402.jean-zay-iam48.351797.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652109762.jean-zay-iam52.875163.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652243217.jean-zay-iam52.953132.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652602809.jean-zay-iam52.1180799.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652842333.jean-zay-iam52.1433534.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652845074.jean-zay-iam52.1439109.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652884547.jean-zay-iam52.1491984.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652893776.jean-zay-iam52.1506125.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652895390.jean-zay-iam52.1508909.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652895798.jean-zay-iam52.1510244.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652895912.jean-zay-iam52.1510987.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652896011.jean-zay-iam52.1511761.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1652966843.jean-zay-iam52.1604642.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1653128177.jean-zay-iam52.1813084.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1653405877.jean-zay-iam52.2171072.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1653765338.jean-zay-iam52.2633953.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654119108.jean-zay-iam52.3090957.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654221468.jean-zay-iam52.3223111.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654222009.jean-zay-iam52.3225974.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654223356.jean-zay-iam52.3229313.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654223795.jean-zay-iam52.3232247.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654224205.jean-zay-iam52.3234345.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654583780.jean-zay-iam48.3186295.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654620176.jean-zay-iam48.3235255.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1654992727.jean-zay-iam50.283667.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655144405.jean-zay-iam52.229294.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655221791.jean-zay-iam51.541320.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655441821.jean-zay-iam51.845756.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655442588.jean-zay-iam52.607729.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655448580.jean-zay-iam52.618208.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655629134.jean-zay-iam52.914359.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655648593.jean-zay-iam52.941074.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655671779.jean-zay-iam52.972329.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1655811757.jean-zay-iam50.44424.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656171623.jean-zay-iam50.313461.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656434069.jean-zay-iam50.488358.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656519622.jean-zay-iam50.539379.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656520122.jean-zay-iam50.541218.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656527984.jean-zay-iam50.547236.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656528426.jean-zay-iam50.549059.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656530646.jean-zay-iam50.551896.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656531335.jean-zay-iam50.553856.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656531619.jean-zay-iam50.555570.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656536362.jean-zay-iam50.559778.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656551714.jean-zay-iam50.570125.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656578994.jean-zay-iam51.108061.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656938425.jean-zay-iam51.312858.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656993072.jean-zay-iam24.853725.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1656993628.jean-zay-iam24.855606.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1657057900.jean-zay-iam24.952526.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1657125321.jean-zay-iam24.1036113.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tensorboard/main/events.out.tfevents.1657125517.jean-zay-iam24.1036629.0', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tokenizer.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tokenizer_config.json', size=None, blob_id=None, lfs=None)""], ""spaces"": [""HuggingFaceH4/starchat-playground"", ""uwnlp/guanaco-playground-tgi"", ""olivierdehaene/chat-llm-streaming"", ""huggingface/bloom_demo"", ""tomg-group-umd/lm-watermarking"", ""Sharathhebbar24/One-stop-for-Open-source-models"", ""ysharma/Talk_to_Multilingual_AI_WhisperBloomCoqui"", ""monra/freegpt-webui"", ""bigscience-data/roots-search"", ""EuroPython2022/Step-By-Step-With-Bloom"", ""EuroPython2022/Translate-with-Bloom"", ""yenniejun/tokenizers-languages"", ""Geonmo/socratic-models-image-captioning-with-BLOOM"", ""KBaba7/Quant"", ""justest/gpt4free"", ""ysharma/Bloom-Creates-Meme"", ""EuroPython2022/Write-Stories-Using-Bloom"", ""society-ethics/model-card-regulatory-check"", ""bigscience/petals-api"", ""EuroPython2022/Zero-Shot-SQL-by-Bloom"", ""EuroPython2022/Scratchpad-w-BLOOM"", ""bilgeyucel/captionate"", ""NeuralInternet/ChatLLMs"", ""decodemai/Stable-Diffusion-Ads"", ""abdulmeLINK/programmer-bloom"", ""decodemai/chatgpt_prompts"", ""decodemai/devils_advocate"", ""ehristoforu/Open_LLM_starchat_bot"", ""kastan/ai-teaching-assistant"", ""FluxWaveCorp/Ghostwriter-Bloom"", ""ghosthamlet/Write-Stories-Using-Bloom"", ""matthoffner/starchat-ggml"", ""bhaskartripathi/LLM_Quantization"", ""awacke1/StoryWriterTextGenMem"", ""decodemai/market_sizing"", ""decodemai/business_tech_ideas"", ""gsaivinay/Llama-2-13B-GGML-server"", ""bayartsogt/real-time-tokenizer"", ""5w4n/burmese-tokenizers"", ""totolook/Quant"", ""FallnAI/Quantize-HF-Models"", ""bigscience-data/scisearch"", ""ysharma/test_speech_to_text"", ""tekkonetes/Chatbots"", ""decodemai/future_in_words"", ""decodemai/intersection_scenarios"", ""awacke1/Bloom.Big.Science.Continual.Generator"", ""sanjayw/starchat-playground"", ""cloudqi/MultisourceChat"", ""awacke1/Bloom.Generative.Writer"", ""Saturdays/Starchat_Saturdays"", ""g4f/freegpt-webui"", ""Sangmin/Eiken-Essay-Using-BLOOM"", ""KneeKhan/DSSG_Test"", ""ysharma/testing_llm"", ""knkarthick/chat-llm-streaming"", ""hra/music-recommendation"", ""slush0/petals-playground"", ""hra/stable-diffusion-tee-shirt"", ""kastan/ai-teaching-assistant-beta"", ""HuggingFaceH4/reward-modeling-chat-ui"", ""Fernando22/freegpt-webui"", ""g4f/g4f"", ""arslan-ahmed/talk-to-your-docs"", ""Nymbo/LangHub"", ""futranbg/HFMODEL-translator-2"", ""widged/bloom_demo"", ""Xhaheen/regex_by_bloom"", ""darragh/bloom_demo_long"", ""ysharma/testing_stablediff"", ""autonomous019/Story_Generator_v2"", ""GrantC/learning_goals_bloom"", ""LandonBurlingham/04GR-StoryGen-Memory"", ""awacke1/04-AW-StorywriterwMem"", ""leoberniga/Write-Stories-Using-Bloom"", ""ceckenrode/Memory-Chat-Story-Generator-Bloom"", ""gabrielgmendonca/chilton"", ""gresci/Translate-with-Bloom"", ""Msp/opensource_chat_assistants"", ""awacke1/Memory-Chat-Story-Generator-Bloom"", ""Tritkoman/Bloom"", ""Jour/Bloom-Translation"", ""nateraw/text-generation-inference"", ""jolucas/llm_lab"", ""gaouzief/b"", ""nikravan/Text2Sql"", ""awacke1/Bloom.Human.Feedback.File.Ops"", ""DataScienceEngineering/4-GeneratorCalcPipe"", ""awacke1/4-GeneratorCalcPipe"", ""danielcwang-optum/4-GeneratorCalcPipe"", ""Mahathi/4-GeneratorCalcPipe"", ""awacke1/BigScienceBloomRootsMemory"", ""OpenMind-AI/starchat-playground"", ""Jeffreylex/bigscience-bloom"", ""srikotha/bigscience-bloom"", ""ceckenrode/bigscience-bloom"", ""ozgur34/qb-Engine2"", ""awacke1/Write-Stories-Using-Bloom"", ""ZENLLC/guanaco-playground-tgi"", ""awacke1/Bloom.QA.Translation.LLM.AI""], ""safetensors"": {""parameters"": {""BF16"": 176247271424}, ""total"": 176247271424}, ""security_repo_status"": null, ""lastModified"": ""2023-07-28 17:50:20+00:00"", ""cardData"": ""language:\n- ak\n- ar\n- as\n- bm\n- bn\n- ca\n- code\n- en\n- es\n- eu\n- fon\n- fr\n- gu\n- hi\n- id\n- ig\n- ki\n- kn\n- lg\n- ln\n- ml\n- mr\n- ne\n- nso\n- ny\n- or\n- pa\n- pt\n- rn\n- rw\n- sn\n- st\n- sw\n- ta\n- te\n- tn\n- ts\n- tum\n- tw\n- ur\n- vi\n- wo\n- xh\n- yo\n- zh\n- zu\nlicense: bigscience-bloom-rail-1.0\npipeline_tag: text-generation\nprogramming_language:\n- C\n- C++\n- C#\n- Go\n- Java\n- JavaScript\n- Lua\n- PHP\n- Python\n- Ruby\n- Rust\n- Scala\n- TypeScript\nwidget:\n- text: 'A \""whatpu\"" is a small, furry animal native to Tanzania. An example of a sentence\n    that uses the word whatpu is: We were traveling in Africa and we saw these very\n    cute whatpus. | To do a \""farduddle\"" means to jump up and down really fast. An\n    example of a sentence that uses the word farduddle is:'\n  example_title: Imaginary word\n  group: English\n- text: 'Un \""whatpu\"" est un petit animal \u00e0 fourrure originaire de Tanzanie. Un exemple\n    de phrase qui utilise le mot whatpu est: Nous \u00e9tions en Afrique et nous avons\n    vu des whatpus trop mignons. Faire un \""farduddle\"" veut dire sauter sur place vraiment\n    vite. Un exemple de phrase qui utilise le mot farduddle est:'\n  example_title: Imaginary word\n  group: French\n- text: 'Un \""whatpu\"" es un peque\u00f1o animal peludo nativo de Tanzania. Un ejemplo de\n    una oraci\u00f3n que usa la palabra whatpu es: Est\u00e1bamos viajando por \u00c1frica y vimos\n    estos whatpus muy bonitos. Hacer un \""farduddle\"" significa saltar arriba y abajo\n    muy r\u00e1pido. Un ejemplo de una oraci\u00f3n que usa la palabra farduddle es:'\n  example_title: Imaginary word\n  group: Spanish\n- text: ' \u0627\u0644\""\u0648\u0627\u062a\u0628\u0648\"" \u0647\u0648 \u062d\u064a\u0648\u0627\u0646 \u0635\u063a\u064a\u0631 \u0645\u0643\u0633\u0648 \u0628\u0627\u0644\u0641\u0631\u0627\u0621 \u064a\u0639\u064a\u0634 \u0641\u064a \u062a\u0646\u0632\u0627\u0646\u064a\u0627. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645\n    \u0643\u0644\u0645\u0629 \u0648\u0627\u062a\u0628\u0648 \u0647\u064a: \u0643\u0646\u0627 \u0646\u0633\u0627\u0641\u0631 \u0641\u064a \u0627\u0641\u0631\u064a\u0642\u064a\u0627 \u0648 \u0631\u0623\u064a\u0646\u0627 \u0647\u0624\u0644\u0627\u0621 \u0627\u0644\u0648\u0627\u062a\u0628\u0648 \u0627\u0644\u0644\u0637\u0641\u0627\u0621. \u0644\u0644\u0642\u064a\u0627\u0645 \u0628\""\u0641\u0627\u0631\u062f\u0627\u062f\u0644\""\n    \u064a\u0639\u0646\u064a \u0627\u0646 \u062a\u0642\u0641\u0632 \u0644\u0644\u0623\u0639\u0644\u0649 \u0648 \u0627\u0644\u0623\u0633\u0641\u0644 \u0628\u0633\u0631\u0639\u0629 \u0643\u0628\u064a\u0631\u0629. \u0645\u062b\u0627\u0644 \u0639\u0644\u0649 \u062c\u0645\u0644\u0629 \u062a\u0633\u062a\u062e\u062f\u0645 \u0643\u0644\u0645\u0629 \u0641\u0627\u0631\u062f\u0627\u062f\u0644 \u0647\u064a:'\n  example_title: Imaginary word\n  group: Arabic\n- text: 'Um \""whatpu\"" \u00e9 um pequeno animal peludo nativo da Tanz\u00e2nia. Um exemplo de\n    uma frase que usa a palavra whatpu \u00e9: Est\u00e1vamos a viajar por \u00c1frica e vimos uns\n    whatpus muito queridos. Fazer um \""farduddle\"" significa saltar para cima e para\n    baixo muito r\u00e1pido. Um exemplo de uma frase que usa a palavra farduddle \u00e9:'\n  example: Imaginary word\n  group: Portuguese\n- text: Pour d\u00e9guster un ortolan, il faut tout d'abord\n  example_title: Recipe\n  group: French\n- text: \""34+10=44 \\n54+20=\""\n  example_title: Addition\n  group: Math\n- text: 'This tool converts irregular verbs to past tense.\n\n    Arise - Arose\n\n    Become - Became\n\n    Forget - Forgot\n\n    Freeze -'\n  example_title: Irregular verbs\n  group: English\n- text: 'Please unscramble the letters into a word, and write that word:\n\n    r e!c.i p r o.c a/l = reciprocal\n\n    d.o m i!n a n.t ='\n  example_title: Word unscrambling\n  group: English\n- text: 'Estos ejemplos quitan vocales de las palabras\n\n    Ejemplos:\n\n    hola - hl\n\n    manzana - mnzn\n\n    papas - pps\n\n    alacran - lcrn\n\n    papa -'\n  example_title: Vowel removal\n  group: Spanish\n- text: 'Traduce espa\u00f1ol de Espa\u00f1a a espa\u00f1ol de Argentina\n\n    El coche es rojo - el auto es rojo\n\n    El ordenador es nuevo - la computadora es nueva\n\n    el boligrafo es negro - lapicera es negra\n\n    la nevera'\n  example_title: Spanish to Argentinian Spanish\n  group: Spanish\n- text: To say \""I love you\"" in Hindi, you would say\n  example_title: Translation to Hindi\n  group: English\n- text: To say \""I love you\"" in Hindi, you would say\n  example_title: Translation from English\n  group: Hindi\n- text: 'Poor English: She no went to the market. Corrected English:'\n  example_title: Grammar exercise 1\n  group: English\n- text: '\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0627\u0644\u0639\u062f\u062f \u0627\u0644\u0639\u0627\u0645\u0644\u064a \u0641\u064a \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646:'\n  example_title: Code generation\n  group: Arabic\n- text: 'Regexp. Here is a regular expression to match a word starting with a number\n    and then having only vowels:'\n  example_title: Regular expressions\n  group: English\n- text: 'Do a hello world in different languages:\n\n    Python: print(\""hello world\"")\n\n    R:'\n  example_title: Code generation\n  group: English\n- text: 'Which is the correct preposition? I''m born X July. X is the preposition\n    in\n\n    He sat X a chair. X is the preposition on\n\n    She drove X the bridge. X is the preposition'\n  example_title: Grammar exercise 2\n  group: English\n- text: 'Traduction en fran\u00e7ais: Dans cet essai je vais m''interroger sur la conscience\n    des mod\u00e8les d''intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue.\n    Pour commencer, je m''int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise.\n    Ensuite, j''aborderai la question de l''intelligence et de son lien avec le langage.\n    Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l''IA et sur sa\n    conscience.\n\n    Traduction en espagnol:'\n  example_title: Translation to Spanish\n  group: French\n- text: 'Traducci\u00f3n al franc\u00e9s: Dans cet essai je vais m''interroger sur la conscience\n    des mod\u00e8les d''intelligence artificielle r\u00e9cents comme les mod\u00e8les de langue.\n    Pour commencer, je m''int\u00e9resserai \u00e0 la notion de conscience et \u00e0 ce qui la caract\u00e9rise.\n    Ensuite, j''aborderai la question de l''intelligence et de son lien avec le langage.\n    Enfin, dans une derni\u00e8re partie je me pencherai sur le cas de l''IA et sur sa\n    conscience.\n\n    Traducci\u00f3n al espa\u00f1ol:'\n  example_title: Translation from French\n  group: Spanish\n- text: \u0630\u0627\u062a \u0645\u0631\u0629 \u060c \u0639\u0627\u0634 \u0634\u0628\u0644 \u0627\u0644\u062f\u0628 \u0641\u064a \u0627\u0644\u063a\u0627\u0628\u0629\n  example_title: Fairy tale\n  group: Arabic\n- text: \u090f\u0915 \u092c\u093e\u0930 \u0915\u0940 \u092c\u093e\u0924 \u0939\u0948, \u091c\u0902\u0917\u0932 \u092e\u0947\u0902 \u090f\u0915 \u092d\u093e\u0932\u0942 \u0915\u093e \u0936\u093e\u0935\u0915 \u0930\u0939\u0924\u093e \u0925\u093e\n  example_title: Fairy tale\n  group: Hindi\n- text: Il \u00e9tait une fois une licorne qui vivait\n  example_title: Fairy tale\n  group: French\n- text: 'Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half\n    of the golf balls are blue. How many blue golf balls are there?\n\n    A: Let''s think step by step.'\n  example_title: Mathematical reasoning\n  group: English\nco2_eq_emissions:\n  emissions: 24700000\n  source: Estimating the Carbon Footprint of BLOOM, a 176B Parameter Language Model.\n    https://arxiv.org/abs/2211.02001\n  training_type: pre-training\n  geographical_location: Orsay, France\n  hardware_used: 384 A100 80GB GPUs\nmodel-index:\n- name: bloom\n  results:\n  - task:\n      type: text-generation\n    dataset:\n      name: humaneval\n      type: openai_humaneval\n    metrics:\n    - type: pass@1\n      value: 0.15542682926829265\n      name: pass@1\n      verified: false\n    - type: pass@10\n      value: 0.3278356276947017\n      name: pass@10\n      verified: false\n    - type: pass@100\n      value: 0.5719815685597749\n      name: pass@100\n      verified: false"", ""transformersInfo"": {""auto_model"": ""AutoModelForCausalLM"", ""custom_class"": null, ""pipeline_tag"": ""text-generation"", ""processor"": ""AutoTokenizer""}, ""_id"": ""62862fbd504d37700308a82e"", ""modelId"": ""bigscience/bloom"", ""usedStorage"": 2820253076240}",0,"https://huggingface.co/12sebas/new_jar, https://huggingface.co/mradermacher/bloom-GGUF",2,,0,"https://huggingface.co/mradermacher/bloom-i1-GGUF, https://huggingface.co/DevQuasar/bigscience.bloom-GGUF",2,"https://huggingface.co/Or4cl3-1/SAM-Gemini-BLOOM-OPT-Gopher-Megatron-slerp, https://huggingface.co/Or4cl3-1/code-slerp",2,"EuroPython2022/Scratchpad-w-BLOOM, FallnAI/Quantize-HF-Models, HuggingFaceH4/starchat-playground, KBaba7/Quant, NeuralInternet/ChatLLMs, Sharathhebbar24/One-stop-for-Open-source-models, bhaskartripathi/LLM_Quantization, bigscience-catalogue-lm-data/corpus-map, bigscience/BigScienceCorpus, bigscience/bloom-book, bigscience/license, bilgeyucel/captionate, ehristoforu/Open_LLM_starchat_bot, huggingface/InferenceSupport/discussions/new?title=bigscience/bloom&description=React%20to%20this%20comment%20with%20an%20emoji%20to%20vote%20for%20%5Bbigscience%2Fbloom%5D(%2Fbigscience%2Fbloom)%20to%20be%20supported%20by%20Inference%20Providers.%0A%0A(optional)%20Which%20providers%20are%20you%20interested%20in%3F%20(Novita%2C%20Hyperbolic%2C%20Together%E2%80%A6)%0A, monra/freegpt-webui, tekkonetes/Chatbots, uwnlp/guanaco-playground-tgi",17
12sebas/new_jar,"---
datasets:
- 12sebas/Jar_base
language:
- es
metrics:
- perplexity
base_model:
- bigscience/bloom
pipeline_tag: text-generation
library_name: transformers
---","{""id"": ""12sebas/new_jar"", ""author"": ""12sebas"", ""sha"": ""2a05e72c6fe7ba6740890e07aa815c858100b52a"", ""last_modified"": ""2024-09-18 23:25:24+00:00"", ""created_at"": ""2024-09-18 21:57:40+00:00"", ""private"": false, ""gated"": false, ""disabled"": false, ""downloads"": 9, ""downloads_all_time"": null, ""likes"": 0, ""library_name"": ""transformers"", ""gguf"": null, ""inference"": null, ""tags"": [""transformers"", ""pytorch"", ""gpt2"", ""text-generation"", ""es"", ""dataset:12sebas/Jar_base"", ""base_model:bigscience/bloom"", ""base_model:finetune:bigscience/bloom"", ""autotrain_compatible"", ""text-generation-inference"", ""endpoints_compatible"", ""region:us""], ""pipeline_tag"": ""text-generation"", ""mask_token"": null, ""trending_score"": null, ""card_data"": ""base_model:\n- bigscience/bloom\ndatasets:\n- 12sebas/Jar_base\nlanguage:\n- es\nlibrary_name: transformers\nmetrics:\n- perplexity\npipeline_tag: text-generation"", ""widget_data"": [{""text"": ""Me llamo Julien y me gusta""}, {""text"": ""Me llamo Thomas y mi principal""}, {""text"": ""Me llamo Manuel y trabajo en""}, {""text"": ""\u00c9rase una vez,""}, {""text"": ""Si t\u00fa me dices ven, ""}], ""model_index"": null, ""config"": {""model_type"": ""gpt2"", ""architectures"": [""GPT2LMHeadModel""], ""tokenizer_config"": {}}, ""transformers_info"": {""auto_model"": ""AutoModelForCausalLM"", ""custom_class"": null, ""pipeline_tag"": ""text-generation"", ""processor"": ""AutoTokenizer""}, ""siblings"": [""RepoSibling(rfilename='.gitattributes', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='README.md', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='config.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='merges.txt', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='pytorch_model.bin', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='tokenizer_config.json', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='vocab.json', size=None, blob_id=None, lfs=None)""], ""spaces"": [], ""safetensors"": null, ""security_repo_status"": null, ""lastModified"": ""2024-09-18 23:25:24+00:00"", ""cardData"": ""base_model:\n- bigscience/bloom\ndatasets:\n- 12sebas/Jar_base\nlanguage:\n- es\nlibrary_name: transformers\nmetrics:\n- perplexity\npipeline_tag: text-generation"", ""transformersInfo"": {""auto_model"": ""AutoModelForCausalLM"", ""custom_class"": null, ""pipeline_tag"": ""text-generation"", ""processor"": ""AutoTokenizer""}, ""_id"": ""66eb4cd4561b0d0436c90523"", ""modelId"": ""12sebas/new_jar"", ""usedStorage"": 1020767955}",1,,0,,0,,0,,0,huggingface/InferenceSupport/discussions/new?title=12sebas/new_jar&description=React%20to%20this%20comment%20with%20an%20emoji%20to%20vote%20for%20%5B12sebas%2Fnew_jar%5D(%2F12sebas%2Fnew_jar)%20to%20be%20supported%20by%20Inference%20Providers.%0A%0A(optional)%20Which%20providers%20are%20you%20interested%20in%3F%20(Novita%2C%20Hyperbolic%2C%20Together%E2%80%A6)%0A,1
mradermacher/bloom-GGUF,"---
base_model: bigscience/bloom
language:
- ak
- ar
- as
- bm
- bn
- ca
- code
- en
- es
- eu
- fon
- fr
- gu
- hi
- id
- ig
- ki
- kn
- lg
- ln
- ml
- mr
- ne
- nso
- ny
- or
- pa
- pt
- rn
- rw
- sn
- st
- sw
- ta
- te
- tn
- ts
- tum
- tw
- ur
- vi
- wo
- xh
- yo
- zh
- zu
library_name: transformers
license: bigscience-bloom-rail-1.0
quantized_by: mradermacher
---
## About

<!-- ### quantize_version: 2 -->
<!-- ### output_tensor_quantised: 1 -->
<!-- ### convert_type: hf -->
<!-- ### vocab_type:  -->
<!-- ### tags:  -->
static quants of https://huggingface.co/bigscience/bloom

<!-- provided-files -->
weighted/imatrix quants are available at https://huggingface.co/mradermacher/bloom-i1-GGUF
## Usage

If you are unsure how to use GGUF files, refer to one of [TheBloke's
READMEs](https://huggingface.co/TheBloke/KafkaLM-70B-German-V0.1-GGUF) for
more details, including on how to concatenate multi-part files.

## Provided Quants

(sorted by size, not necessarily quality. IQ-quants are often preferable over similar sized non-IQ quants)

| Link | Type | Size/GB | Notes |
|:-----|:-----|--------:|:------|
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q2_K.gguf.part1of2) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q2_K.gguf.part2of2) | Q2_K | 68.2 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_S.gguf.part1of2) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_S.gguf.part2of2) | Q3_K_S | 78.8 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_M.gguf.part1of2) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_M.gguf.part2of2) | Q3_K_M | 94.5 | lower quality |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.IQ4_XS.gguf.part1of2) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.IQ4_XS.gguf.part2of2) | IQ4_XS | 97.8 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_S.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_S.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_S.gguf.part3of3) | Q4_K_S | 103.1 | fast, recommended |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_L.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_L.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q3_K_L.gguf.part3of3) | Q3_K_L | 103.1 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_M.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_M.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q4_K_M.gguf.part3of3) | Q4_K_M | 114.8 | fast, recommended |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_S.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_S.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_S.gguf.part3of3) | Q5_K_S | 124.3 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_M.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_M.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q5_K_M.gguf.part3of3) | Q5_K_M | 133.7 |  |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q6_K.gguf.part1of3) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q6_K.gguf.part2of3) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q6_K.gguf.part3of3) | Q6_K | 147.7 | very good quality |
| [PART 1](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q8_0.gguf.part1of4) [PART 2](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q8_0.gguf.part2of4) [PART 3](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q8_0.gguf.part3of4) [PART 4](https://huggingface.co/mradermacher/bloom-GGUF/resolve/main/bloom.Q8_0.gguf.part4of4) | Q8_0 | 191.2 | fast, best quality |

Here is a handy graph by ikawrakow comparing some lower-quality quant
types (lower is better):

![image.png](https://www.nethype.de/huggingface_embed/quantpplgraph.png)

And here are Artefact2's thoughts on the matter:
https://gist.github.com/Artefact2/b5f810600771265fc1e39442288e8ec9

## FAQ / Model Request

See https://huggingface.co/mradermacher/model_requests for some answers to
questions you might have and/or if you want some other model quantized.

## Thanks

I thank my company, [nethype GmbH](https://www.nethype.de/), for letting
me use its servers and providing upgrades to my workstation to enable
this work in my free time. Additional thanks to [@nicoboss](https://huggingface.co/nicoboss) for giving me access to his private supercomputer, enabling me to provide many more imatrix quants, at much higher quality, than I would otherwise be able to.

<!-- end -->
","{""id"": ""mradermacher/bloom-GGUF"", ""author"": ""mradermacher"", ""sha"": ""05014bbdf3e9be7e19510cfd03cff72a15ea92a7"", ""last_modified"": ""2025-02-15 10:11:40+00:00"", ""created_at"": ""2025-02-14 06:00:06+00:00"", ""private"": false, ""gated"": false, ""disabled"": false, ""downloads"": 0, ""downloads_all_time"": null, ""likes"": 0, ""library_name"": ""transformers"", ""gguf"": null, ""inference"": null, ""tags"": [""transformers"", ""ak"", ""ar"", ""as"", ""bm"", ""bn"", ""ca"", ""code"", ""en"", ""es"", ""eu"", ""fon"", ""fr"", ""gu"", ""hi"", ""id"", ""ig"", ""ki"", ""kn"", ""lg"", ""ln"", ""ml"", ""mr"", ""ne"", ""nso"", ""ny"", ""or"", ""pa"", ""pt"", ""rn"", ""rw"", ""sn"", ""st"", ""sw"", ""ta"", ""te"", ""tn"", ""ts"", ""tum"", ""tw"", ""ur"", ""vi"", ""wo"", ""xh"", ""yo"", ""zh"", ""zu"", ""base_model:bigscience/bloom"", ""base_model:finetune:bigscience/bloom"", ""license:bigscience-bloom-rail-1.0"", ""endpoints_compatible"", ""region:us""], ""pipeline_tag"": null, ""mask_token"": null, ""trending_score"": null, ""card_data"": ""base_model: bigscience/bloom\nlanguage:\n- ak\n- ar\n- as\n- bm\n- bn\n- ca\n- code\n- en\n- es\n- eu\n- fon\n- fr\n- gu\n- hi\n- id\n- ig\n- ki\n- kn\n- lg\n- ln\n- ml\n- mr\n- ne\n- nso\n- ny\n- or\n- pa\n- pt\n- rn\n- rw\n- sn\n- st\n- sw\n- ta\n- te\n- tn\n- ts\n- tum\n- tw\n- ur\n- vi\n- wo\n- xh\n- yo\n- zh\n- zu\nlibrary_name: transformers\nlicense: bigscience-bloom-rail-1.0\nquantized_by: mradermacher"", ""widget_data"": null, ""model_index"": null, ""config"": null, ""transformers_info"": {""auto_model"": ""AutoModel"", ""custom_class"": null, ""pipeline_tag"": null, ""processor"": null}, ""siblings"": [""RepoSibling(rfilename='.gitattributes', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='README.md', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.IQ4_XS.gguf.part1of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.IQ4_XS.gguf.part2of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q2_K.gguf.part1of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q2_K.gguf.part2of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_L.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_L.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_L.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_M.gguf.part1of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_M.gguf.part2of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_S.gguf.part1of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q3_K_S.gguf.part2of2', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_M.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_M.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_M.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_S.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_S.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q4_K_S.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_M.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_M.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_M.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_S.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_S.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q5_K_S.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q6_K.gguf.part1of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q6_K.gguf.part2of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q6_K.gguf.part3of3', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q8_0.gguf.part1of4', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q8_0.gguf.part2of4', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q8_0.gguf.part3of4', size=None, blob_id=None, lfs=None)"", ""RepoSibling(rfilename='bloom.Q8_0.gguf.part4of4', size=None, blob_id=None, lfs=None)""], ""spaces"": [], ""safetensors"": null, ""security_repo_status"": null, ""lastModified"": ""2025-02-15 10:11:40+00:00"", ""cardData"": ""base_model: bigscience/bloom\nlanguage:\n- ak\n- ar\n- as\n- bm\n- bn\n- ca\n- code\n- en\n- es\n- eu\n- fon\n- fr\n- gu\n- hi\n- id\n- ig\n- ki\n- kn\n- lg\n- ln\n- ml\n- mr\n- ne\n- nso\n- ny\n- or\n- pa\n- pt\n- rn\n- rw\n- sn\n- st\n- sw\n- ta\n- te\n- tn\n- ts\n- tum\n- tw\n- ur\n- vi\n- wo\n- xh\n- yo\n- zh\n- zu\nlibrary_name: transformers\nlicense: bigscience-bloom-rail-1.0\nquantized_by: mradermacher"", ""transformersInfo"": {""auto_model"": ""AutoModel"", ""custom_class"": null, ""pipeline_tag"": null, ""processor"": null}, ""_id"": ""67aedbe620c2635ae05d36f2"", ""modelId"": ""mradermacher/bloom-GGUF"", ""usedStorage"": 1256244489696}",1,,0,,0,,0,,0,huggingface/InferenceSupport/discussions/new?title=mradermacher/bloom-GGUF&description=React%20to%20this%20comment%20with%20an%20emoji%20to%20vote%20for%20%5Bmradermacher%2Fbloom-GGUF%5D(%2Fmradermacher%2Fbloom-GGUF)%20to%20be%20supported%20by%20Inference%20Providers.%0A%0A(optional)%20Which%20providers%20are%20you%20interested%20in%3F%20(Novita%2C%20Hyperbolic%2C%20Together%E2%80%A6)%0A,1
